{"name":"Onebox","tagline":"A gem for turning URLs into website previews","body":"  - [![Gem Version](https://badge.fury.io/rb/onebox.png)](https://rubygems.org/gems/onebox)\r\n  - [![Code Climate](https://codeclimate.com/github/dysania/onebox.png)](https://codeclimate.com/github/dysania/onebox)\r\n  - [![Build Status](https://travis-ci.org/dysania/onebox.png)](https://travis-ci.org/dysania/onebox)\r\n  - [![Dependency Status](https://gemnasium.com/dysania/onebox.png)](https://gemnasium.com/dysania/onebox)\r\n  - [![Coverage Status](https://coveralls.io/repos/dysania/onebox/badge.png)](https://coveralls.io/r/dysania/onebox)\r\n\r\n\r\nOnebox is a library for turning media URLs into previews.\r\n\r\nOnebox currently has support for page, image, and video URLs from these sites:\r\n\r\n  - Amazon\r\n  - Android App Store\r\n  - Apple Store\r\n  - BlipTV\r\n  - Clikthrough\r\n  - College Humor\r\n  - Dailymotion\r\n  - Dotsub\r\n  - Flickr\r\n  - Funny or Die\r\n  - Gist\r\n  - Github\r\n    - Blob\r\n    - Commit\r\n    - Pull Request\r\n  - Hulu\r\n  - Imgur\r\n  - Kinomap\r\n  - NFB\r\n  - Open Graph\r\n  - Qik\r\n  - Revision\r\n  - Rotten Tomatoes\r\n  - Slideshare\r\n  - Smugmug\r\n  - Soundcloud\r\n  - Stack Exchange\r\n  - TED\r\n  - Twitter\r\n  - Wikipedia\r\n  - yFrog\r\n\r\n\r\nUsage\r\n=====\r\n\r\nUsing onebox is fairly simple!\r\nFirst make sure the library is required:\r\n\r\n``` ruby\r\nrequire \"onebox\"\r\n```\r\n\r\nThen pass a link to the library's interface:\r\n\r\n``` ruby\r\nrequire \"onebox\"\r\n\r\nurl = \"http://www.amazon.com/gp/product/B005T3GRNW/ref=s9_simh_gw_p147_d0_i2\"\r\npreview = Onebox.preview(url)\r\n```\r\n\r\nThis will contain a simple Onebox::Preview object that handles all the transformation.\r\nFrom here you either call `Onebox::Preview#to_s` or just pass the object to a string:\r\n\r\n``` ruby\r\nrequire \"onebox\"\r\n\r\nurl = \"http://www.amazon.com/gp/product/B005T3GRNW/ref=s9_simh_gw_p147_d0_i2\"\r\npreview = Onebox.preview(url)\r\n\"#{preview}\" == preview.to_s #=> true\r\n```\r\n\r\nOnebox has it's own caching system but you can also provide (or turn off) your own system:\r\n\r\n``` ruby\r\nrequire \"onebox\"\r\n\r\nurl = \"http://www.amazon.com/gp/product/B005T3GRNW/ref=s9_simh_gw_p147_d0_i2\"\r\npreview = Onebox.preview(url, cache: Rails.cache)\r\n\"#{preview}\" == preview.to_s #=> true\r\n```\r\n\r\nIn addition you can set your own defaults with this handy interface:\r\n\r\n``` ruby\r\nrequire \"onebox\"\r\n\r\nOnebox.defaults = {\r\n  cache: Rails.cache\r\n}\r\n\r\nurl = \"http://www.amazon.com/gp/product/B005T3GRNW/ref=s9_simh_gw_p147_d0_i2\"\r\npreview = Onebox.preview(url)\r\n\"#{preview}\" == preview.to_s #=> true\r\n```\r\n\r\n\r\nSetup\r\n=====\r\n\r\n  1. Create new onebox engine\r\n\r\n    ``` ruby\r\n    # in lib/onebox/engine/name_onebox.rb\r\n\r\n    module Onebox\r\n      module Engine\r\n        class NameOnebox\r\n          include Engine\r\n          include HTML\r\n\r\n          private\r\n\r\n          def data\r\n            {\r\n              url: @url,\r\n              name: raw.css(\"h1\").inner_text,\r\n              image: raw.css(\"#main-image\").first[\"src\"],\r\n              description: raw.css(\"#postBodyPS\").inner_text\r\n            }\r\n          end\r\n        end\r\n      end\r\n    end\r\n    ```\r\n\r\n  2. Create new onebox spec\r\n\r\n    ``` ruby\r\n    # in spec/lib/onebox/engine/name_spec.rb\r\n    require \"spec_helper\"\r\n\r\n    describe Onebox::Engine::NameOnebox do\r\n      let(:link) { \"http://yoursitename.com\" }\r\n      let(:html) { described_class.new(link).to_html }\r\n\r\n      before do\r\n        fake(link, response(\"name.response\"))\r\n      end\r\n\r\n      it \"has the video's title\" do\r\n        expect(html).to include(\"title\")\r\n      end\r\n\r\n      it \"has the video's still shot\" do\r\n        expect(html).to include(\"photo.jpg\")\r\n      end\r\n\r\n      it \"has the video's description\" do\r\n        expect(html).to include(\"description\")\r\n      end\r\n\r\n      it \"has the URL to the resource\" do\r\n        expect(html).to include(link)\r\n      end\r\n    end\r\n```\r\n\r\n  3. Create new handlebars template\r\n\r\n    ``` html\r\n    # in templates/name.handlebars\r\n    <div class=\"onebox\">\r\n      <a href=\"{{url}}\">\r\n        <h1>{{name}}</h1>\r\n        <h2 class=\"host\">yoursitename.com</h2>\r\n        <img src=\"{{image}}\" />\r\n        <p>{{description}}</p>\r\n      </a>\r\n    </div>\r\n    ```\r\n\r\n  4. Create new fixture from HTML response\r\n\r\n    ``` bash\r\n    curl --output spec/fixtures/oneboxname.response -L -X -GET http://yoursitename.com\r\n    ```\r\n\r\n  5. Require in Engine module\r\n\r\n    ``` ruby\r\n    # in lib/onebox/engine/engine.rb\r\n    require_relative \"engine/name_onebox\"\r\n    ```\r\n\r\n\r\nInstalling\r\n==========\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem \"onebox\". \"~> 1.0\"\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install onebox\r\n\r\n\r\nContributing\r\n============\r\n\r\n  1. Fork it\r\n  2. Create your feature branch (`git checkout -b my-new-feature`)\r\n  3. Commit your changes (`git commit -am 'Add some feature'`)\r\n  4. Push to the branch (`git push origin my-new-feature`)\r\n  5. Create new Pull Request","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}